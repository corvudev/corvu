---
import type { ApiReference } from '@lib/getTypes'

interface Props extends ApiReference {}

const { type, name, descriptionHtml, parts } = Astro.props
---

<div
  class="relative mb-4 rounded-md border-2 border-corvu-400 bg-corvu-1000 p-4 prose-code:bg-corvu-200"
>
  <div class="not-prose flex items-start justify-between">
    <h3 id={encodeURIComponent(name)} class="scroll-mt-24 text-lg font-bold">
      {name}
    </h3>
    <div class="-mr-4 -mt-4 rounded-bl-md bg-corvu-400 px-2 py-1">
      {type === 'component' && <p class="text-sm font-bold">Component</p>}
      {type === 'context' && <p class="text-sm font-bold">Context</p>}
      {type === 'type' && <p class="text-sm font-bold">Type</p>}
      {type === 'function' && <p class="text-sm font-bold">Function</p>}
    </div>
  </div>
  <p class="mt-1" set:html={descriptionHtml} />
  <div class="mt-3 space-y-6">
    {
      parts.map((part) => (
        <div>
          <p class="font-bold">{part.name}</p>
          {part.description && <p class="mt-1">{part.description}</p>}
          <dl class="text-sm">
            {part.props.map((property) => (
              <div class="mt-3 border-b border-corvu-400 pb-3">
                <div class="md:flex md:items-start md:justify-between">
                  <dt
                    class:list={[
                      'max-w-fit rounded px-1 py-0.5 font-mono text-base font-bold text-corvu-dark',
                      {
                        'bg-corvu-400':
                          !property.displayType ||
                          property.displayType === 'property',
                        'bg-cyan-500': property.displayType === 'function',
                        'bg-orange-400': property.displayType === 'data',
                      },
                    ]}
                  >
                    {property.name}
                  </dt>
                  {property.type && (
                    <div class="mt-1 md:mt-0 md:text-right">
                      <code class="not-prose col-span-2 font-mono">
                        {property.type}
                      </code>
                    </div>
                  )}
                </div>
                {property.defaultHtml && (
                  <p class="prose prose-code:whitespace-normal">
                    Default: <span set:html={property.defaultHtml} />
                  </p>
                )}
                <dd
                  class="prose col-span-4 col-start-2 mt-1"
                  set:html={property.descriptionHtml}
                />
              </div>
            ))}
          </dl>
        </div>
      ))
    }
  </div>
</div>
