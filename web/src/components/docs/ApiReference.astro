---
import type { ApiReference } from '@lib/getTypes'

interface Props extends ApiReference {}

const { type, name, descriptionHtml, parts } = Astro.props
---

<div class="py-4 prose-code:bg-corvu-200">
  <div class="not-prose flex items-start justify-between">
    <div class="inline-flex space-x-2 text-xl font-bold">
      <h3 id={encodeURIComponent(name)} class="scroll-mt-24">{name}</h3><p
        class="rounded-md bg-corvu-500 px-1 pb-0.5 pt-1 text-sm font-bold text-corvu-dark"
      >
        {type === 'component' && 'Component'}
        {type === 'context' && 'Context'}
        {type === 'type' && 'Type'}
        {type === 'function' && 'Function'}
      </p>
    </div>
  </div>
  <p class="mt-1" set:html={descriptionHtml} />
  <div class="mt-3">
    {
      parts.map((part) => (
        <div>
          <p class="font-bold">{part.name}</p>
          {part.description && <p class="mt-1">{part.description}</p>}
          <div class="divide-y divide-corvu-400/50 text-sm">
            {part.props.map((property) => (
              <div class="pt-2">
                <div class="md:flex md:items-start md:justify-between">
                  {property.name && (
                    <p
                      class:list={[
                        'not-prose max-w-fit rounded px-1 py-0.5 font-mono text-base font-bold text-corvu-dark',
                        {
                          'bg-corvu-400':
                            !property.displayType ||
                            property.displayType === 'property',
                          'bg-cyan-500': property.displayType === 'function',
                          'bg-orange-400': property.displayType === 'data',
                        },
                      ]}
                    >
                      {property.name}
                    </p>
                  )}
                  {property.type && (
                    <div class="mt-1 md:mt-0 md:text-right">
                      <code class="not-prose col-span-2 font-mono">
                        {property.type}
                      </code>
                    </div>
                  )}
                </div>
                {property.defaultHtml && (
                  <p class="prose prose-code:whitespace-normal">
                    Default: <span set:html={property.defaultHtml} />
                  </p>
                )}
                <p
                  class="prose col-span-4 col-start-2 mt-1"
                  set:html={property.descriptionHtml}
                />
              </div>
            ))}
          </div>
        </div>
      ))
    }
  </div>
</div>
