---
import type { ApiReference } from '@lib/getTypes'

interface Props extends ApiReference {}

const { type, name, descriptionHtml, parts } = Astro.props
---

<div>
  <div class="not-prose inline-flex items-center space-x-2">
    <h3
      id={encodeURIComponent(name)}
      class="scroll-mt-20 text-xl font-bold md:scroll-mt-2"
    >
      {name}
    </h3><p
      class="rounded-md border-2 border-corvu-200 bg-corvu-100 px-1.5 py-0.5 text-sm font-bold"
    >
      {type === 'component' && 'Component'}
      {type === 'context' && 'Context'}
      {type === 'type' && 'Type'}
      {type === 'function' && 'Function'}
    </p>
  </div>
  <p class="mt-3" set:html={descriptionHtml} />
  <div class="mt-4">
    {
      parts.map((part) => (
        <div class="mb-4">
          <h4 class="not-prose text-lg font-bold">{part.name}</h4>
          {part.description !== undefined && (
            <p class="mt-2">{part.description}</p>
          )}
          <div class="overflow-y-auto">
            {(part.name === 'Props' || part.name === 'Returns') && (
              <table class="mt-3 w-full min-w-[600px] text-left md:min-w-0">
                <tr class="not-prose border-b border-corvu-100">
                  {part.props.some((prop) => prop.name) && (
                    <th class="w-1/4 pb-3">Property</th>
                  )}
                  {part.props.some((prop) => prop.defaultHtml) && (
                    <th class="w-1/4 pb-3">Default</th>
                  )}
                  <th class="w-1/2 pb-3">Type/Description</th>
                </tr>
                {part.props.map((prop) => (
                  <tr class="border-b border-corvu-100">
                    {part.props.some((prop) => prop.name) && (
                      <td class="not-prose py-5 pr-5 align-top text-sm">
                        <p
                          class:list={[
                            'inline whitespace-nowrap rounded px-1.5 py-0.5 font-mono',
                            {
                              'bg-corvu-300': prop.displayType === 'property',
                              'bg-corvu-blue': prop.displayType === 'function',
                            },
                          ]}
                        >
                          {prop.name}
                        </p>
                      </td>
                    )}
                    {part.props.some((prop) => prop.defaultHtml) && (
                      <td class="py-5 pr-5 align-top">
                        {prop.defaultHtml !== undefined ? (
                          <div class="prose" set:html={prop.defaultHtml} />
                        ) : (
                          <p>-</p>
                        )}
                      </td>
                    )}
                    <td class="py-5 pr-5 align-top text-sm">
                      <p class="not-prose inline rounded border border-corvu-300 bg-corvu-100 px-1.5 py-0.5">
                        {prop.type}
                      </p>
                      <div
                        class="prose mt-3 prose-code:border-none prose-code:bg-transparent prose-code:!p-0"
                        set:html={prop.descriptionHtml}
                      />
                    </td>
                  </tr>
                ))}
              </table>
            )}
            {part.name !== 'Props' && part.name !== 'Returns' && (
              <table class="mt-3 w-full min-w-[600px] text-left md:min-w-0">
                <tr class="not-prose border-b border-corvu-100">
                  <th class="w-1/2 pb-3">Property</th>
                  <th class="w-1/2 pb-3">Description</th>
                </tr>
                {part.props.map((prop) => (
                  <tr class="border-b border-corvu-100">
                    <td class="not-prose py-5 pr-5 align-top text-sm">
                      <p class="inline whitespace-nowrap rounded bg-corvu-pink px-1.5 py-0.5 font-mono">
                        {prop.name}
                      </p>
                    </td>
                    <td class="py-5 pr-5 align-top text-sm">
                      <div class="prose" set:html={prop.descriptionHtml} />
                    </td>
                  </tr>
                ))}
              </table>
            )}
          </div>
        </div>
      ))
    }
  </div>
</div>
